{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const INITIAL_STATE = {\n//   cart : [],\n//   counter: 0\n// }\n\n// const cart = createSlice({\n//   name: 'cart',\n//   initialState: INITIAL_STATE,\n//   reducers: {\n//     // New Item\n//     addToCart: (state, action) => {\n//       const product = state.cart.find((product) => product.id === action.payload.id)\n//       if(product) {\n//         product.quantity = product.quantity + action.payload.quantity\n//       } else {\n//         state.cart.push({...action.payload})\n//         state.counter++\n//       }\n//     },\n\n//     // Increment\n//     incrementQuantity: (state, action) => {\n//       const product = state.cart.find((product) => product.id === action.payload)\n//       if(product.quantity >= product.stock) {\n//         product.quantity = product.stock\n//       } else {\n//         product.quantity++\n//       }\n//     },\n\n//     // Decrement\n//     decrementQuantity: (state, action) => {\n//       const product = state.cart.find((product) => product.id === action.payload)\n//       if(product.quantity === 1) {\n//         product.quantity = 1\n//       } else {\n//         product.quantity--\n//       }\n//     },\n\n//     // Remove\n//     removeProduct: (state, action) => {\n//       const updatedCart = state.cart.filter((product) => product.id !== action.payload)\n//       state.counter--\n//       state.cart = updatedCart\n//     }\n//   }\n// })\n\n// export const {\n//   addToCart,\n//   incrementQuantity,\n//   decrementQuantity,\n//   removeProduct\n// } = cart.actions\n\n// export default cart.reducer","map":{"version":3,"names":[],"sources":["/home/lena/e-commerce/e-commerce/src/Store/Slice/CartSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const INITIAL_STATE = {\n//   cart : [],\n//   counter: 0\n// }\n\n// const cart = createSlice({\n//   name: 'cart',\n//   initialState: INITIAL_STATE,\n//   reducers: {\n//     // New Item\n//     addToCart: (state, action) => {\n//       const product = state.cart.find((product) => product.id === action.payload.id)\n//       if(product) {\n//         product.quantity = product.quantity + action.payload.quantity\n//       } else {\n//         state.cart.push({...action.payload})\n//         state.counter++\n//       }\n//     },\n\n//     // Increment\n//     incrementQuantity: (state, action) => {\n//       const product = state.cart.find((product) => product.id === action.payload)\n//       if(product.quantity >= product.stock) {\n//         product.quantity = product.stock\n//       } else {\n//         product.quantity++\n//       }\n//     },\n\n//     // Decrement\n//     decrementQuantity: (state, action) => {\n//       const product = state.cart.find((product) => product.id === action.payload)\n//       if(product.quantity === 1) {\n//         product.quantity = 1\n//       } else {\n//         product.quantity--\n//       }\n//     },\n\n//     // Remove\n//     removeProduct: (state, action) => {\n//       const updatedCart = state.cart.filter((product) => product.id !== action.payload)\n//       state.counter--\n//       state.cart = updatedCart\n//     }\n//   }\n// })\n\n// export const {\n//   addToCart,\n//   incrementQuantity,\n//   decrementQuantity,\n//   removeProduct\n// } = cart.actions\n\n// export default cart.reducer"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}